# ################################################################ #
# THE FOLLOWING IS AN EXPLANATION OF THE GRAMMAR THAT SKHD PARSES. #
# FOR SIMPLE EXAMPLE MAPPINGS LOOK FURTHER DOWN THIS FILE..        #
# ################################################################ #

# A list of all built-in modifier and literal keywords can
# be found at https://github.com/koekeishiya/skhd/issues/1
#
# A hotkey is written according to the following rules:
#
#   hotkey       = <mode> '<' <action> | <action>
#
#   mode         = 'name of mode' | <mode> ',' <mode>
#
#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#   keysym       = <mod> '-' <key> | <key>
#
#   mod          = 'modifier keyword' | <mod> '+' <mod>
#
#   key          = <literal> | <keycode>
#
#   literal      = 'single letter or built-in keyword'
#
#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#   proc_map_lst = * <proc_map>
#
#   proc_map     = <string> ':' <command> | <string>     '~' |
#                  '*'      ':' <command> | '*'          '~'
#
#   string       = '"' 'sequence of characters' '"'
#
#   command      = command is executed through '$SHELL -c' and
#                  follows valid shell syntax. if the $SHELL environment
#                  variable is not set, it will default to '/bin/bash'.
#                  when bash is used, the ';' delimeter can be specified
#                  to chain commands.
#
#                  to allow a command to extend into multiple lines,
#                  prepend '\' at the end of the previous line.
#
#                  an EOL character signifies the end of the bind.
#
#   ->           = keypress is not consumed by skhd
#
#   *            = matches every application not specified in <proc_map_lst>
#
#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
# A mode is declared according to the following rules:
#
#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#               '::' <name> '@'               | '::' <name>
#
#   name      = desired name for this mode,
#
#   @         = capture keypresses regardless of being bound to an action
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.

###############
# H4PZ CONFIG #
###############

# Focus window.
cmd - h : yabai -m window --focus west
cmd - j : yabai -m window --focus south 
cmd - k : yabai -m window --focus north 
cmd - l : yabai -m window --focus east

# Swap window.
shift + cmd - h : yabai -m window --swap west
shift + cmd - j : yabai -m window --swap south 
shift + cmd - k : yabai -m window --swap north 
shift + cmd - l : yabai -m window --swap east

# Warp windows.
ctrl + shift + cmd - h : yabai -m window --warp west
ctrl + shift + cmd - j : yabai -m window --warp south
ctrl + shift + cmd - k : yabai -m window --warp north
ctrl + shift + cmd - l : yabai -m window --warp east

# Send widnow to desktop.
shift + cmd - 1 : yabai -m window --space 1
shift + cmd - 2 : yabai -m window --space 2
shift + cmd - 3 : yabai -m window --space 3
shift + cmd - 4 : yabai -m window --space 4
shift + cmd - 5 : yabai -m window --space 5
shift + cmd - 6 : yabai -m window --space 6
shift + cmd - 7 : yabai -m window --space 7
shift + cmd - 8 : yabai -m window --space 8
shift + cmd - 9 : yabai -m window --space 9
shift + cmd - 0 : yabai -m window --space 10

# Open a terminal (kitty).
cmd - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~

# Toggle fullscreen of focused window.
shift + cmd - f : yabai -m window --toggle zoom-fullscreen

# Float / unfloat window.
shift + cmd - b : yabai -m window --toggle float;\
                               yabai -m window --resize abs:900:600;\
                               yabai -m window --move abs:400:200

# Opens safari.
shift + alt + ctrl + cmd - s : open /Applications/Safari.app

# Rotate windows.
shift + cmd - r : yabai -m space --rotate 90

# Mirror horizontally.
shift + cmd - x : yabai -m space --mirror x-axis

# Mirror vertically.
shift + cmd - y : yabai -m space --mirror y-axis


# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]
